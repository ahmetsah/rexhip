FUNCTION_BLOCK "Weg_CFW100"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      mb_addr : UInt;
   END_VAR

   VAR_IN_OUT 
      mb_query : "mb_query";
   END_VAR

   VAR 
      sb : "mb_station_block_udt";
      r1 : Struct
         Output_Speed : UInt;   // 2
         Motor_Current : UInt;
         DC_Link_Voltage : UInt;
         Output_Frequency : UInt;
         Inverter_Status : UInt;
         Output_Voltage : UInt;
         Motor_Torque : UInt;
         Active_Current : UInt;
         digital_input : UInt;
      END_STRUCT;
      r2_staus : Struct
         x08_running : Bool;
         x09_ready : Bool;
         x10_forward : Bool;
         x11_jog_active : Bool;
         x12_remote_mode : Bool;
         x13_undervoltage : Bool;
         "x14_" : Bool;
         x15_fault : Bool;
         x00 : Bool;
         x01 : Bool;
         x02 : Bool;
         x03 : Bool;
         x04 : Bool;
         x05_2nd_Ramp : Bool;   // 0: 1st Acceleration and deceleration ramp by P100 and P101.
         x06_configuration_state : Bool;
         x07_alarm : Bool;
         a : Struct
            x08 : Bool;
            x09 : Bool;
            x10 : Bool;
            x11 : Bool;
            x12 : Bool;
            x13 : Bool;
            x14 : Bool;
            x15 : Bool;
            x00 : Bool;
            x01 : Bool;
            x02 : Bool;
            x03 : Bool;
            x04 : Bool;
            x05 : Bool;
            x06 : Bool;
            x07 : Bool;
         END_STRUCT;
      END_STRUCT;
      "_" : Bool;
      w1 : Struct
         Minimum_Frequency : UInt;
         Maximum_Frequency : UInt := 50;
         Maximum_Output_Current : UInt := 100;
      END_STRUCT;
      w2 : Struct
         "Acceleration Time" : UInt := 5;
         "Deceleration Time" : UInt := 10;
      END_STRUCT;
      w3_sel_rem : UInt := 1;   // 1 = Always Remote
      w4_Ref_sel : UInt := 9;   // 9=serial
      w5 : Struct
         controll_word : Struct
            x08 : Bool;
            x09 : Bool;
            x10 : Bool;
            x11 : Bool;
            x12 : Bool;
            x13 : Bool;
            x14 : Bool;
            x15 : Bool;
            x00_no_ramp_stop : Bool := true;
            x01_start : Bool := true;
            x02_Forward : Bool;
            x03_jog : Bool;
            x04_Remote : Bool := true;
            "x05_2nd Ramp" : Bool;
            x06 : Bool;
            x07_Fault_Reset : Bool;
            a : Struct
               x08 : Bool;
               x09 : Bool;
               x10 : Bool;
               x11 : Bool;
               x12 : Bool;
               x13 : Bool;
               x14 : Bool;
               x15 : Bool;
               x00 : Bool;
               x01 : Bool;
               x02 : Bool;
               x03 : Bool;
               x04 : Bool;
               x05 : Bool;
               x06 : Bool;
               x07 : Bool;
            END_STRUCT;
         END_STRUCT;
         speed_ref : Int;
      END_STRUCT;
      w6_stop_mode : Int;
      w7_no_comm_action : Int := 1;   // 1 = Ramp Stop
      c : Int := 1;
      setup_finished : Bool;
   END_VAR


BEGIN
	// Weg - CFW100
	// 
	// Web: http://www.clrwtr.com/PDF/WEG/WEG-CFW100-Programming.pdf
	
	"mb_station_block_header"(sb := #sb, mb_query := #mb_query);
	#mb_query.mb_addr := #mb_addr;
	
	#mb_query.mode := #mb_query.c.read.holding_reg;
	#mb_query(data_addr := 2, data_ptr := #r1);
	#mb_query(data_addr := 680, data_ptr := #r2_staus);
	
	#mb_query.mode := #mb_query.c.write.holding_reg;
	#mb_query(data_addr := 682, data_ptr := #w5);
	CASE #c OF
	    1: #mb_query(data_addr := 133, data_ptr := #w1);
	    2: #mb_query(data_addr := 101, data_ptr := #w2);
	    3: #mb_query(data_addr := 220, data_ptr := #w3_sel_rem);
	    4: #mb_query(data_addr := 222, data_ptr := #w4_Ref_sel);
	    5: #mb_query(data_addr := 229, data_ptr := #w6_stop_mode);
	    6: #mb_query(data_addr := 313, data_ptr := #w7_no_comm_action);
	    ELSE: #c := 0;
	END_CASE;
	#c += BOOL_TO_INT(#mb_query.Done);
	
	"mb_station_block_footer"(sb := #sb, mb_query := #mb_query);
	IF #sb.out.error_comm THEN #setup_finished := false; END_IF;
	
	(*
	P229 Stop mode:
	0 The inverter will apply the stop ramp programmed in P101 or P103.
	1 The motor will run free until it stops
	
	P006 Inverter Status:
	0 = Ready
	1 = Run
	2 = Undervoltage
	3 = Fault
	4 = Not Used
	5 = Configuration
	
	*)
END_FUNCTION_BLOCK

