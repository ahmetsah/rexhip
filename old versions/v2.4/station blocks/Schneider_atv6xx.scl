FUNCTION_BLOCK "Schneider_ATV6xx"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      mb_addr : USInt := 1;
      ref_freq : Real;
   END_VAR

   VAR_IN_OUT 
      mb_query : "mb_query";
   END_VAR

   VAR 
      sb : "mb_station_block_udt";
      write1 : Struct
         cmd_reg : Struct
            x08_halt : Bool;
            x09 : Bool;
            x10 : Bool;
            x11_Reverse : Bool;
            x12 : Bool;
            x13 : Bool;
            x14 : Bool;
            x15 : Bool;
            x00_switch_on : Bool := TRUE;
            x01_enable_voltage : Bool := TRUE;
            x02_quick_stop : Bool;
            x03_Run : Bool;
            x04 : Bool;
            x05 : Bool;
            x06 : Bool;
            x07_fault_reset : Bool;
         END_STRUCT;
         ref_freq : Int;
      END_STRUCT;
      read1 : Struct
         status : Struct   // ETA
            x08 : Bool;
            x09_remote : Bool;   // Command or reference value via fieldbus
            x10_on_target : Bool;   // Reference value reached
            x11_ref_outside_lim : Bool;   // Reference value outside limits
            x12 : Bool;
            x13 : Bool;
            x14_stop_key : Bool;   // Manufacturer-specific Stop via STOP key
            x15_reverse : Bool;   // Manufacturer-specific
            x00_awaiting_power_stage_supply : Bool;
            x01_ready : Bool;
            x02_running : Bool;
            x03_fault : Bool;
            x04_power_stage_supply_present : Bool;
            x05_quick_stop : Bool;
            x06_power_stage_supply_disabled : Bool;
            x07_warning : Bool;
         END_STRUCT;
         output_frequency : Int;   // RFR
         frequency_reference_before_ramp : Int;   // FRH
         motor_current : Int;   // LCR
         motor_torque : Int;   // OTR
         ext_status_word { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Word;
         mains_voltage : Int;   // ULN
         motor_voltage : Int;   // UOP
         drive_thermal_state : Int;   // THD
      END_STRUCT;
   END_VAR


BEGIN
	// Schneider - ATV6xx (EAV94279)
	//  
	// - http://www2.schneider-electric.com/resources/sites/SCHNEIDER_ELECTRIC/
	//   content/live/FAQS/275000/FA275868/en_US/
	//   Process%20drive%20communication%20parameters.xlsx
	// - https://profsector.com/media/catalogs/56e3af69500ef.pdf
	// - https://download.schneider-electric.com/
	//   files?p_enDocType=User+guide&p_File_Id=5470508810&
	//   p_File_Name=ATV600_EthernetIP_Modbus_TCP_Manual_EN_EAV6
	//   4328_02.pdf&p_Reference=EAV64328
	
	#write1.ref_freq := REAL_TO_INT(#ref_freq * 10);
	#write1.cmd_reg.x00_switch_on := #write1.cmd_reg.x03_Run := #ref_freq <> 0;
	
	"mb_station_block_header"(sb := #sb, mb_query := #mb_query);
	#mb_query.mb_addr := #mb_addr;
	
	#mb_query.mode := #mb_query.c.write.holding_reg;
	#mb_query(data_addr := 8501, data_ptr := #write1);
	
	#mb_query.mode := #mb_query.c.read.holding_reg;
	#mb_query(data_addr := 3201, data_ptr := #read1);
	
	"mb_station_block_footer"(sb := #sb, mb_query := #mb_query);
	
END_FUNCTION_BLOCK

