FUNCTION_BLOCK "produal_TEHR_M"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      mb_addr : USInt;
   END_VAR
   VAR_INPUT RETAIN
      calibration_offset : Int;   // mbar
   END_VAR

   VAR_OUTPUT 
      temperature : Real;   // Â°C
      analogue_output : Real;   // V
      potentiometer : Real;   // %
   END_VAR

   VAR_IN_OUT 
      mb_query : "mb_query";
   END_VAR

   VAR 
      sb : "mb_station_block_udt";
      r1 { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Struct
         temperature { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Int;
         analogue_output { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : UInt;
         potentiometer { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Int;
      END_STRUCT;
   END_VAR


BEGIN
	// Produal - TEHR-M - Temperatur transmitter.
	// Product: 117Z190 - Pt1000 EN 60751/B
	// http://www.produal.com/shop/web_bus_temperature_transmitters/
	// sku-117Z190?hiddenAttributes_sensor_output=sensor_output_modbus&saf=true
	
	"mb_station_block_header"(sb := #sb, mb_query := #mb_query);
	#mb_query.mb_addr := #mb_addr;
	
	#mb_query(mode := #mb_query.c.mode.read,
	          data_addr := 30001,
	          data_ptr := #r1);
	
	#mb_query(mode := #mb_query.c.mode.write,
	          data_addr := 40001,
	          data_ptr := #calibration_offset);
	
	"mb_station_block_footer"(sb := #sb, mb_query := #mb_query);
	
	#temperature := INT_TO_REAL(#r1.temperature) * 0.1;
	#analogue_output := UINT_TO_REAL(#r1.analogue_output);
	#potentiometer := INT_TO_REAL(#r1.potentiometer) * 0.1;
END_FUNCTION_BLOCK

