FUNCTION_BLOCK "Syxthsense_TEHR_M"
TITLE = Syxthsense - TEHR-M - Temperature transmitter
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : OlaBjornli
VERSION : 0.1
   VAR_INPUT 
      mb_addr : USInt := 1;
   END_VAR

   VAR_OUTPUT 
      data : Struct
         temperature : Real;   // [Â°C]
         analogue_output : Real;   // [Â°F]
         potentiometer_position : Real;   // [%]
      END_STRUCT;
   END_VAR

   VAR_IN_OUT 
      mb_query : "mb_query";
   END_VAR

   VAR 
      sb : "mb_station_block_udt";
      query_1 : Struct
         temperature : Int;   // [Â°C]
         analogue_output : Int;   // [Â°F]
         potentiometer_position : Int;   // [%]
      END_STRUCT;
   END_VAR


BEGIN
	// http://www.syxthsense.com/product/product_pdf/SN1.174-TEHR-M.pdf
	
	"mb_station_block_header"(sb := #sb, mb_query := #mb_query);
	
	#mb_query(mb_addr := #mb_addr,
	          mode := #mb_query.c.mode.read,
	          data_addr := 30001,
	          data_ptr := #query_1);
	
	"mb_station_block_footer"(sb := #sb, mb_query := #mb_query);
	
	IF #sb.out.error_comm THEN
	    #query_1.temperature := 0;
	    #query_1.analogue_output := 0;
	    #query_1.potentiometer_position := 0;
	END_IF;
	#data.temperature := INT_TO_REAL(#query_1.temperature) / 10;
	#data.analogue_output := INT_TO_REAL(#query_1.analogue_output) / 10;
	#data.potentiometer_position := INT_TO_REAL(#query_1.potentiometer_position) / 10;
	
END_FUNCTION_BLOCK

